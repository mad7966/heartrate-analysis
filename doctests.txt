This is a doctest file for the heartbeat.py module

>>> import heartbeat as hb

#test data reader
>>> hb.get_data('data.csv')
array([ 530.,  518.,  506., ...,  492.,  493.,  494.])
>>> hb.get_data('data.mat', column_name='hr')
getting matlab file
array([ 530.,  518.,  506., ...,  492.,  493.,  494.])

#test samplerate calculation
>>> data = hb.get_data('data2.csv', column_name='timer')
>>> hb.get_samplerate_mstimer(data)
116.99555416894158

>>> datetimedata = ['2016-11-24 13:58:58.081000', '2016-11-24 13:58:58.097000', '2016-11-24 13:58:58.097000',
...                     '2016-11-24 13:58:58.112000', '2016-11-24 13:58:58.128000', '2016-11-24 13:58:58.128000',
...                     '2016-11-24 13:58:58.144000', '2016-11-24 13:58:58.144000', '2016-11-24 13:58:58.159000',
...                     '2016-11-24 13:58:58.175000', '2016-11-24 13:58:58.175000', '2016-11-24 13:58:58.190000',
...                     '2016-11-24 13:58:58.206000']
>>> hb.get_samplerate_datetime(datetimedata, timeformat='%Y-%m-%d %H:%M:%S.%f')
104.0

>>> datetimedata = hb.get_data('data3.csv', column_name='datetime')
>>> hb.get_samplerate_datetime(datetimedata, timeformat='%Y-%m-%d %H:%M:%S.%f')
100.41971086584796
>>>


#test rolling mean functions
>>> data = hb.get_data('data.csv')
>>> hb.rollwindow(data, 10).shape
(2474, 10)
  
>>> hb.rolmean(data, 10, 100.0).shape
(2482,)


#test filtering
>>> hb.butter_lowpass_filter(data, 2, 100.0, 2).shape
(2483,)

>>> hb.filtersignal(data, 2, 100.0, 2).shape
(2483,)
		 

#test peak fitting
>>> data = hb.get_data('data.csv')
>>> rolmean = hb.rolmean(data, 0.75, 100.0)
>>> hb.working_data['hr'] = data
>>> hb.fit_peaks(data, rolmean, 100.0)
>>> hb.working_data['best']
10

#validate RR calculations
>>> hb.working_data['RR_list'][0]
1020.0
>>> hb.working_data['RR_list'][5]
1090.0
>>> hb.working_data['RR_list'][10]
1080.0
>>> hb.working_data['RR_diff'][0]
30.0
>>> hb.working_data['RR_diff'][5]
100.0
>>> hb.working_data['RR_diff'][10]
80.0
>>> hb.working_data['RR_sqdiff'][0]
900.0
>>> hb.working_data['RR_sqdiff'][5]
10000.0
>>> hb.working_data['RR_sqdiff'][10]
6400.0


#validate pipeline
>>> data = hb.get_data('data.csv')
>>> measures = hb.process(data, 100.0, 0.75)

#validate timeseries measures
>>> measures['bpm']
58.898847631241999
>>> measures['ibi']
1018.695652173913
>>> measures['sdnn']
65.760061080189999
>>> measures['sdsd']
34.866925292300195
>>> measures['rmssd']
64.737231103199733
>>> measures['pnn20']
0.8636363636363636
>>> measures['pnn50']
0.4090909090909091
>>> measures['hr_mad']
40.0

#validate frequency measures
>>> measures['lf']
38.889763602405651
>>> measures['hf']
47.317782223388534
>>> measures['lf/hf']
0.8218847497713655